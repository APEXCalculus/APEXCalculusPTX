<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="sec_optimization" label="sec_optimization">
  <title>Optimization</title>

  <figure xml:id="vid_deriv_apps_opt_prod_sum" component="video" vshift="0">
    <caption>A simple optimization problem</caption>
    <video youtube="nlLf3CcgblI" label="vid_deriv_apps_opt_prod_sum"/>
  </figure>


  <p>
    In <xref ref="sec_extreme_values"/>
    we learned about extreme values <mdash/> the largest and smallest values a
    function attains on an interval.
    We motivated our interest in such values by discussing how it made sense to
    want to know the highest/lowest values of a stock,
    or the fastest/slowest an object was moving.
    In this section we apply the concepts of extreme values to solve
    <q>word problems,</q>
    <ie/>, problems stated in terms of situations that require us to create the
    appropriate mathematical framework in which to solve the problem.
        <idx><h>optimization</h></idx>
  </p>

  <p>
    We start with a classic example which is followed by a discussion of the
    topic of optimization.
  </p>

  <example xml:id="ex_opt1">
    <title>Optimization: perimeter and area</title>
    <statement>
      <p>
        A man has <m>100</m> feet of fencing,
        a large yard, and a small dog.
        He wants to create a rectangular enclosure for his dog with the fencing
        that provides the maximal area.
        What dimensions provide the maximal area?
      </p>
    </statement>
    <solution>
      <p>
        One can likely guess the correct answer <mdash/> that is great.
        We will proceed to show how calculus can provide this answer in a context
        that proves this answer is correct.
      </p>

      <p>
        It helps to make a sketch of the situation.
        Our enclosure is sketched twice in <xref ref="fig_opt1b"/>,
        either with treetop grass and nice fence boards or as a simple rectangle.
        Either way, drawing a rectangle forces us to realize that we need to
        know the dimensions of this rectangle so we can create an area function
        <mdash/> after all,
        we are trying to maximize the area.
      </p>

      <figure xml:id="fig_opt1b">
        <caption>A sketch of the enclosure in <xref ref="ex_opt1"/>.
      </caption>
        <sidebyside widths="47% 47%" margins="0%">
          <image>
            <shortdescription>
              A rectangular enclosure with green grass and a fence with <m>x</m> and <m>y</m> dimensions.
            </shortdescription>
            <description>
              <p>
                A 3-D rectangular enclosure is drawn with green grass and nice fence boards on the <m>x</m> and <m>x</m> axis.
              </p>
            </description>

            <latex-image label="img_opt1b">

            \begin{tikzpicture}[&gt;=latex]

            \shadedraw [top color = treetop,bottom color = treetop!50!black] (0,0) -- (33.6pt,35.28pt) -- (95.2pt,35.28pt) -- (61.6pt,0) -- cycle;

            \begin{scope}[cm={1,1.05,0,1,(0,0)}]
            \foreach \x in {0,...,7}
            {
            \shadedraw [xscale=.3,shift={(\x*14 pt,0)},left color=treestump!40!white,right color = treestump!99!white] (0,0) -- ++ (0,20pt) -- ++ (4pt,4pt) -- ++ (6pt,0pt) -- ++ (4pt,-4pt) -- ++ (0pt,-20pt) -- cycle;
            }
            \end{scope}

            \begin{scope}[shift={(33.6pt,35.28pt)}]
            \foreach \x in {0,...,10}
            {
            \shadedraw [xscale=.4,shift={(\x*14 pt,0)},left color=treestump!40!white,right color = treestump!99!white] (0,0) -- ++ (0,20pt) -- ++ (4pt,4pt) -- ++ (6pt,0pt) -- ++ (4pt,-4pt) -- ++ (0pt,-20pt) -- cycle;
            }
            \end{scope}

            \foreach \x in {0,...,10}
            {
            \shadedraw [xscale=.4,shift={(\x*14 pt,0)},left color=treestump!40!white,right color = treestump!99!white] (0,0) -- ++ (0,20pt) -- ++ (4pt,4pt) -- ++ (6pt,0pt) -- ++ (4pt,-4pt) -- ++ (0pt,-20pt) -- cycle;
            }

            \begin{scope}[cm={1,1.05,0,1,(61.6pt,0)}]
            \foreach \x in {0,...,7}
            {
            \shadedraw [xscale=.3,shift={(\x*14 pt,0)},left color=treestump!40!white,right color = treestump!99!white] (0,0) -- ++ (0,20pt) -- ++ (4pt,4pt) -- ++ (6pt,0pt) -- ++ (4pt,-4pt) -- ++ (0pt,-20pt) -- cycle;
            }
            \end{scope}

            \draw [&lt;-&gt;] (0,-5pt) -- (61.6pt,-5pt) node [below,pos=.5] {$x$};
            \draw [&lt;-&gt;] (100.2pt,35.28pt) -- (66.6pt,0pt) node [right,pos=.5] {$y$};

            \end{tikzpicture}

            </latex-image>
          </image>

          <image>
            <shortdescription>
               A rectangle shape is drawn with sides labeled <m>x</m> and <m>y</m>.
            </shortdescription>
            <description>
              <p>
                The 2-D plane rectangle has sides labeled <m>x</m> and <m>y</m>. The dimensions are both unknown.
              </p>
            </description>
            <latex-image label="img_opt1b2">

            \begin{tikzpicture}
            \draw [shift = {(150pt,0)}] (0,0) -- (80pt,0) node [pos=.5,below] {$x$} -- (80pt,50pt) node [pos=.5,right] {$y$} -- (0,50pt) -- cycle;
            \end{tikzpicture}

            </latex-image>
          </image>

        </sidebyside>
      </figure>
      <p>
        We let <m>x</m> and <m>y</m> denote the lengths of the sides of the
        rectangle. Clearly,
        <me>
          \text{ Area } =xy
        </me>.
      </p>

      <p>
        We do not yet know how to handle functions with two variables;
        we need to reduce this down to a single variable.
        We know more about the situation:
        the man has <m>100</m> feet of fencing.
        By knowing the perimeter of the rectangle must be <m>100</m>,
        we can create another equation:
        <me>
          \text{ Perimeter }  = 100 = 2x+2y
        </me>.
      </p>

      <p>
        We now have two equations and two unknowns.
        In the latter equation, we solve for <m>y</m>:
        <me>
          y = 50-x
        </me>.
      </p>

      <p>
        Now substitute this expression for <m>y</m> in the area equation:
        <me>
          \text{ Area }  = A(x) = x(50-x)
        </me>.
      </p>

      <p>
        Note we now have an equation of one variable;
        we can truly call the Area a function of <m>x</m>.
      </p>

      <p>
        This function only makes sense when <m>0\leq x \leq 50</m>,
        otherwise we get negative values of area.
        So we find the extreme values of <m>A(x)</m> on the interval
        <m>[0,50]</m> using <xref ref="idea_extrema"/>.
      </p>

      <p>
        To find the critical points,
        we take the derivative of <m>A(x)</m> and set it equal to <m>0</m>,
        then solve for <m>x</m>.
        <md>
          <mrow>A(x) \amp = x(50-x)</mrow>
          <mrow>\amp = 50x-x^2</mrow>
          <mrow>A'(x)   \amp = 50-2x</mrow>
        </md>
      </p>

      <p>
        We solve <m>50-2x=0</m> to find <m>x=25</m>;
        this is the only critical point.
        We evaluate <m>A(x)</m> at the endpoints of our interval and at this
        critical point to find the extreme values;
        in this case, all we care about is the maximum.
      </p>

      <p>
        Clearly <m>A(0)=0</m> and <m>A(50)=0</m>,
        whereas <m>A(25) = 625</m><quantity>
          <unit base="foot" exp="2"/>
        </quantity>.
        This is the maximum.
        Since we earlier found <m>y = 50-x</m>,
        we find that <m>y</m> is also <m>25</m>.
        Thus the dimensions of the rectangular enclosure with perimeter of
        <quantity>
          <mag>100</mag><unit base="foot"/>
        </quantity>. with maximum area is a square, with sides of length
        <quantity>
          <mag>25</mag><unit base="foot"/>
        </quantity>.
      </p>
    </solution>
  </example>

  <p>
    This example is very simplistic and a bit contrived.
    (After all, most people create a design then buy fencing to meet their needs,
    and not buy fencing and plan later.)
    But it models well the necessary process:
    create equations that describe a situation,
    reduce an equation to a single variable,
    then find the needed extreme value.
  </p>

  <p>
    <q>In real life,</q> problems are much more complex.
    The equations are often <em>not</em>
    reducible to a single variable
    (hence multi-variable calculus is needed)
    and the equations themselves may be difficult to form.
    Understanding the principles here will provide a good foundation for the
    mathematics you will likely encounter later.
  </p>

  <p>
    We outline here the basic process of solving these optimization problems.
  </p>

  <insight xml:id="idea_optimization">
    <title>Solving Optimization Problems</title>
    <p>
      <ol>
        <li>
          <p>
            Understand the problem.
            Clearly identify what quantity is to be maximized or minimized.
            Make a sketch if helpful.
          </p>
        </li>

        <li>
          <p>
            Create equations relevant to the context of the problem,
            using the information given. (One of these should describe the
            quantity to be optimized.
            We'll call this the <em>fundamental equation.</em>)
          </p>
        </li>

        <li>
          <p>
            If the fundamental equation defines the quantity to be optimized as
            a function of more than one variable,
            reduce it to a single variable function using substitutions derived
            from the other equations
            (we'll call these <term>constraint</term> equations).
          </p>
        </li>

        <li>
          <p>
            Identify the domain of this function,
            keeping in mind the context of the problem.
          </p>
        </li>

        <li>
          <p>
            Find the extreme values of this function on the determined domain.
          </p>
        </li>

        <li>
          <p>
            Identify the values of all relevant quantities of the problem.
          </p>
        </li>
      </ol>
    </p>
  </insight>

  <p>
    We will use <xref ref="idea_optimization"/> in a variety of
    examples.
  </p>

  <example xml:id="ex_opt2">
    <title>Optimization: perimeter and area</title>
    <statement>
      <p>
        Here is another classic calculus problem: A woman has a 100 feet of
        fencing, a small dog, and a large yard that contains a stream
        (that is mostly straight).
        She wants to create a rectangular enclosure with maximal area that uses
        the stream as one side.
        (Apparently her dog won't swim away.)
        What dimensions provide the maximal area?
      </p>
    </statement>
    <solution>
      <p>
        We will follow the steps outlined by
        <xref ref="idea_optimization"/>.
      </p>

      <p>
        <ol>
          <li>
            <p>
              We are maximizing <em>area</em>.
              A sketch of the region will help;
              <xref ref="fig_opt2a"/>
              gives two sketches of the proposed enclosed area.
              A key feature of the sketches is to acknowledge that one side is
              not fenced.
            </p>

            <figure xml:id="fig_opt2a">
              <caption>A sketch of the enclosure in <xref ref="ex_opt2"/></caption>
              <sidebyside widths="47% 47%" margins="0%">
                <image>
                  <shortdescription>
                    A rectangular fenced yard with one side not fenced.
                  </shortdescription>
                  <description>
                    <p>
                      A rectangular fenced yard with one side open for a stream. 
                      The dimensions are labeled <m>x</m> and <m>y</m> and are not provided.
                    </p>
                  </description>
                  <latex-image label="img_opt2a">

                  \begin{tikzpicture}[&gt;=latex]

                  \shadedraw [top color = treetop,bottom color = treetop!50!black] (0,0) -- (33.6pt,35.28pt) -- (95.2pt,35.28pt) -- (61.6pt,0) -- cycle;

                  \begin{scope}[cm={1,1.05,0,1,(0,0)}]
                  \foreach \x in {0,...,7}
                  {
                  \shadedraw [xscale=.3,shift={(\x*14 pt,0)},left color=treestump!40!white,right color = treestump!99!white] (0,0) -- ++(0,20pt) -- ++(4pt,4pt) -- ++(6pt,0pt) -- ++(4pt,-4pt)-- ++(0pt,-20pt) -- cycle;
                  }
                  \end{scope}

                  \begin{scope}[shift={(33.6pt,35.28pt)}]
                  \foreach \x in {0,...,10}
                  {
                  \shadedraw [xscale=.4,shift={(\x*14 pt,0)},left color=treestump!40!white,right color = treestump!99!white] (0,0) -- ++(0,20pt) -- ++(4pt,4pt) -- ++(6pt,0pt) -- ++(4pt,-4pt)-- ++(0pt,-20pt) -- cycle;
                  }
                  \end{scope}

                  \begin{scope}[cm={1,1.05,0,1,(61.6pt,0)}]
                  \foreach \x in {0,...,7}
                  {
                  \shadedraw [xscale=.3,shift={(\x*14 pt,0)},left color=treestump!40!white,right color = treestump!99!white] (0,0) -- ++(0,20pt) -- ++(4pt,4pt) -- ++(6pt,0pt) -- ++(4pt,-4pt)-- ++(0pt,-20pt) -- cycle;
                  }
                  \end{scope}

                  \shadedraw [top color=firstcolor, bottom color=firstcolor!50!white] (-10pt,0) sin (30pt,2pt) cos (70pt,0pt) -- (70pt,-10pt) sin (35pt,-8pt) cos (-10pt,-10pt) --cycle;

                  \draw [&lt;-&gt;] (0,-15pt) -- (61.6pt,-15pt) node [below,pos=.5] {$x$};
                  \draw [&lt;-&gt;] (100.2pt,35.28pt) -- (66.6pt,0pt) node [right,pos=.5] {$y$};

                  \end{tikzpicture}

                  </latex-image>
                </image>

                <image>
                  <shortdescription>
                    A rectangle shape is drawn below also not closed on one side.
                  </shortdescription>
                  <description>
                    <p>
                      A 2-D sketch is drawn below showing a rectangle shape with one side opened and the sides labeled <m>x</m> and <m>y</m>.
                      The dimensions are unknown.
                    </p>
                  </description>
                  <latex-image label="img_opt2b">

                  \begin{tikzpicture}

                  \draw [shift = {(0,-80pt)}] (0,0) -- (0,50pt) -- (80pt,50pt) node [pos=.5,below] {$x$} -- (80pt,0) node [pos=.5,right] {$y$};
                  \draw [firstcolor,very thick,shift = {(0,-80pt)}] (0,0) sin (40pt,2pt) cos (80pt,0);

                  \end{tikzpicture}

                  </latex-image>
                </image>

              </sidebyside>
            </figure>

          </li>

          <li>
            <p>
              We want to maximize the area;
              as in the example before,
              <me>
                \text{ Area }  = xy
              </me>.
              This is our fundamental equation.
              This defines area as a function of two variables,
              so we need another equation to  reduce it to one variable.
            </p>

            <p>
              We again appeal to the perimeter;
              here the perimeter is
              <me>
                \text{ Perimeter }  = 100 = x+2y
              </me>.
              The perimeter is our constraint equation.
              Note how this is a different equation for perimeter than in
              <xref ref="ex_opt1"/>,
              since one of the sides does not need to be fenced.
            </p>
          </li>

          <li>
            <p>
              We now reduce the fundamental equation to a single variable using
              our constraint equation.
              In the perimeter equation, solve for <m>y</m>: <m>y = 50 - x/2</m>.
              We can now write Area as
              <md>
                <mrow>\text{ Area }  = A(x) \amp= x(50-x/2)</mrow>
                <mrow>\amp = 50x - \frac12x^2</mrow>
              </md>.
              Area is now defined as a function of one variable.
            </p>
          </li>

          <li>
            <p>
              We want the area to be non-negative.
              Since <m>A(x) = x(50-x/2)</m>,
              we want <m>x\geq 0</m> and <m>50-x/2\geq 0</m>.
              The latter inequality implies that <m>x\leq100</m>,
              so <m>0\leq x\leq 100</m>.
            </p>
          </li>

          <li>
            <p>
              We now find the extreme values.
              At the endpoints, the minimum is found,
              giving an area of <m>0</m>.
            </p>

            <p>
              Find the critical points.
              We have <m>A'(x) = 50-x</m>;
              setting this equal to 0 and solving for <m>x</m> returns <m>x=50</m>.
              This gives an area of
              <me>
                A(50) = 50(25) = 1250
              </me>.
            </p>
          </li>

          <li>
            <p>
              We earlier set <m>y = 50-x/2</m>; thus <m>y = 25</m>.
              Thus our rectangle will have two sides of length <m>25</m> and one
              side of length <m>50</m>,
              with a total area of
              <quantity>
                <mag>1250</mag><unit base="foot" exp="2"/>
              </quantity>.
            </p>
          </li>
        </ol>
      </p>
    </solution>
    <solution component="video" vshift="1">
      <title>Video solution</title>
      <video width="98%" youtube="wIs5N5HOCrc" label="vid_deriv_apps_opt_fence_river" component="video"/>
    </solution>
  </example>

  <p>
    Keep in mind as we do these problems that we are practicing a <em>process</em>;
    that is, we are learning to turn a situation into a system of equations.
    These equations allow us to write a certain quantity as a function of one
    variable, which we then optimize.
  </p>

  <example xml:id="ex_opt3">
    <title>Optimization: minimizing cost</title>
    <statement>
      <p>
        A power line needs to be run from a power station located on the beach
        to an offshore facility.
        <xref ref="fig_opt3b"/>
        shows the distances between the power station to the facility.
      </p>

      <p>
        It costs <m>\$50/\text{ ft }</m> to run a
        power line along the land, and
        <m>\$130/\text{ ft }</m> to run a power
        line under water.
        How much of the power line should be run along the land to minimize the
        overall cost? What is the minimal cost?
      </p>

      <figure xml:id="fig_opt3b" vshift="0">
        <caption>Running a power line from the power station to an offshore
          facility with minimal cost in <xref ref="ex_opt3"/></caption>
        <image width="47%">
          <shortdescription>
            a power line is ran from the power station to an offshore facility.
          </shortdescription>
          <description>
            <p>
              A power line is run from a power station to an offshore facility <quantity><mag>5000</mag><unit base="foot"/></quantity> underwater.
              It is also run <quantity><mag>1000</mag><unit base="foot"/></quantity> along the offshore facility forming a right angle triangle with the under water powerline.
            </p>
            <p>
              The hypotenuse of the triangle shows the distance between the station and offshore facility.
            </p>
          </description>
          <latex-image label="img_opt3b">

          \begin{tikzpicture}[&gt;=latex]

          \begin{scope}
          \clip (0,0) rectangle (140pt,50pt);
          \draw [inner color=firstcolor,draw = white] (-10,-25pt) rectangle (180pt,70pt);

          \end{scope}
          \draw [top color=treestump, bottom color=white,draw=white] (0,0) rectangle (140pt,-15pt);
          \draw (0,0) -- (150pt,0);
          \filldraw [fill=white] (10pt,-5pt) rectangle (20pt,5pt);
          %\filldraw [fill=white] (130pt,35pt) circle (7pt);

          \draw [&lt;-&gt;] (15pt,-10pt) -- (130pt,-10pt) node [below,pos=.5] { 5000 ft};
          \draw [&lt;-&gt;] (140pt,0pt) -- (140pt,35pt) node [right, pos=.5] { 1000 ft};

          \draw [ultra thick] (20pt,0) -- (70pt,0);
          \filldraw (70pt,0) circle (2pt);
          \draw [dashed,thick] (70pt,0) -- (130pt,35pt);
          \filldraw [fill=white] (130pt,35pt) circle (7pt);

          \end{tikzpicture}

          </latex-image>
        </image>
      </figure>
    </statement>
    <solution>
      <p>
        We will follow the strategy of
        <xref ref="idea_optimization"/> implicitly,
        without specifically numbering steps.
      </p>

      <p>
        There are two immediate solutions that we could consider,
        each of which we will reject through
        <q>common sense.</q> First,
        we could minimize the distance by directly connecting the two
        locations with a straight line.
        However, this requires that all the wire be laid underwater,
        the most costly option.
        Second, we could minimize the underwater length by running a wire all
        <quantity>
          <mag>5000</mag><unit base="foot"/>
        </quantity>
        along the beach, directly across from the offshore facility.
        This has the undesired effect of having the longest distance of all,
        probably ensuring a non-minimal cost.
      </p>

      <p>
        The optimal solution likely has the line being run along the ground for
        a while, then underwater, as the figure implies.
        We need to label our unknown distances <mdash/> the distance run along
        the ground and the distance run underwater.
        Recognizing that the underwater distance can be measured as the
        hypotenuse of a right triangle,
        we choose to label the distances as shown in
        <xref ref="fig_opt3c"/>.
      </p>

      <figure xml:id="fig_opt3c" vshift="-2">
        <caption>Labeling unknown distances in <xref ref="ex_opt3"/></caption>
        <image width="47%">
          <shortdescription>
            A power line is ran from the power station to an offshore facility with the distance run along
            the ground and the distance run underwater unknown.
          </shortdescription>
          <description>
            <p>
              A power line is run from a power station to an offshore facility <quantity><mag>5000</mag><unit base="foot"/></quantity> underwater. Here, the distance run along
              the ground and the distance run underwater is unknown and thereby labeled as <m>x</m>.
              It is also run <quantity><mag>1000</mag><unit base="foot"/></quantity> along the offshore facility forming a right angle triangle with the power line.
            </p>
            <p>
              The horizontal line of the image is labelled <m>5000-x</m> which is the distance of the power line laid along land,and
              <m>x</m> from the middle to the pont of the offshore facility which is the distance the power line is not laid.
              The hypotenuse of the right angle triangle measures underwater distance with the equation <msqrt>x^2-1000^2</msqrt>.
            </p>
          </description>
          <latex-image label="img_opt3c">

          \begin{tikzpicture}[&gt;=latex]

          \begin{scope}
          \clip (0,0) rectangle (140pt,50pt);
          \draw [inner color=firstcolor,draw = white] (-10,-25pt) rectangle (180pt,70pt);

          \end{scope}
          \draw [top color=treestump, bottom color=white,draw=white] (0,0) rectangle (140pt,-15pt);
          \draw (0,0) -- (150pt,0);
          \filldraw [fill=white] (10pt,-5pt) rectangle (20pt,5pt);
          %\filldraw [fill=white] (130pt,35pt) circle (7pt);

          \draw [&lt;-&gt;] (15pt,-10pt) -- (70pt,-10pt) node [below,pos=.5] { $5000 -x$};
          \draw [&lt;-&gt;] (70pt,-10pt) -- (130pt,-10pt) node [below,pos=.5] { $x$};
          \draw [&lt;-&gt;] (140pt,0pt) -- (140pt,35pt) node [right, pos=.5] { 1000 ft};

          \draw [ultra thick] (20pt,0) -- (70pt,0);
          \filldraw (70pt,0) circle (2pt);
          \draw [dashed,thick] (70pt,0) -- (130pt,35pt) ;
          \draw (100pt,23pt) node [rotate=30] { $\sqrt{x^2+1000^2}$};
          \filldraw [fill=white] (130pt,35pt) circle (7pt);

          \end{tikzpicture}

          </latex-image>
        </image>
      </figure>

      <p>
        By choosing <m>x</m> as we did
        (instead of letting <m>x</m> be the distance along the land),
        we make the expression under the square root simple.
        We now create the cost function.
        <md alignment="alignat">
          <mrow>\text{Cost} \amp ={}\amp\amp \text{land cost}              \amp\amp +\text{water cost}</mrow>
          <mrow>\amp\amp\amp   \$50\times \text{land distance} \amp\amp +\$130 \times \text{water distance}</mrow>
          <mrow>\amp\amp\amp   50(5000-x)                      \amp\amp +130\sqrt{x^2+1000^2}</mrow>
        </md>.
      </p>

      <p>
        So we have <m>c(x) = 50(5000-x)+ 130\sqrt{x^2+1000^2}</m>.
        This function only makes sense on the interval <m>[0,5000]</m>.
        While we are fairly certain the endpoints will not give a minimal cost,
        we still evaluate <m>c(x)</m> at each to verify.
        <md>
          <mrow>c(0) \amp = 380{,}000\amp c(5000) \amp \approx 662{,}873</mrow>
        </md>.
        (Notice that if <m>x=0</m>, the line is run the full
        <quantity>
          <mag>5000</mag><unit base="foot"/>
        </quantity>
        along land and a full
        <quantity>
          <mag>1000</mag><unit base="foot"/>
        </quantity>
        under water.
        If <m>x=5000</m>, the line is run the maximum distance underwater.)
      </p>

      <p>
        We now find the critical values of <m>c(x)</m>.
        We compute <m>c'(x)</m> as
        <me>
          c'(x) = -50+\frac{130x}{\sqrt{x^2+1000^2}}
        </me>.
      </p>

      <p>
        Recognize that this is never undefined.
        Setting <m>c'(x)=0</m> and solving for <m>x</m>, we have:
        <md>
          <mrow>-50+\frac{130x}{\sqrt{x^2+1000^2}} \amp = 0</mrow>
          <mrow>\frac{130x}{\sqrt{x^2+1000^2}}  \amp = 50</mrow>
          <mrow>\frac{130^2x^2}{x^2+1000^2} \amp = 50^2</mrow>
          <mrow>130^2x^2 \amp = 50^2(x^2+1000^2)</mrow>
          <mrow>130^2x^2-50^2x^2 \amp = 50^2\cdot1000^2</mrow>
          <mrow>(130^2-50^2)x^2 \amp = 50,000^2</mrow>
          <mrow>x^2 \amp = \frac{50,000^2}{130^2-50^2}</mrow>
          <mrow>x \amp = \frac{50,000}{\sqrt{130^2-50^2}}</mrow>
          <mrow>x \amp  = \frac{50,000}{120} =\frac{1250}3\approx 416.67</mrow>
        </md>.
      </p>

      <p>
        Evaluating <m>c(x)</m> at <m>x=416.67</m> gives a minimal cost of about
        <m>\$370{,}000</m>.
        The distance the power line is laid along land is
        <m>5000-416.67 = 4583.33</m> ft., and the underwater distance is
        <m>\sqrt{416.67^2+1000^2} \approx 1083</m> ft.
      </p>
    </solution>
    <solution component="video" vshift="4">
      <title>Video solution</title>
      <video width="98%" youtube="qDK9rqloKRs" label="vid_deriv_apps_opt_power_line" component="video"/>
    </solution>
  </example>

  <p>
    In the exercises you will see a variety of situations that require you to
    combine problem-solving skills with calculus.
    Focus on the <em>process</em>;
    learn how to form equations from situations that can be manipulated into
    what you need.
    Eschew memorizing how to do <q>this kind of problem</q>
    as opposed to <q>that kind of problem.</q>
    Learning a process will benefit one far longer than memorizing a specific
    technique.
  </p>

  <p xml:id="vidint_deriv_apps_opt_box_no_top" component="video">
    Before you begin the exercises, here is one more example,
    presented in video form in <xref ref="vid_deriv_apps_opt_box_no_top"/>.
  </p>

  <figure xml:id="vid_deriv_apps_opt_box_no_top" component="video" vshift="0">
    <caption>Optimizing construction of a box with no top</caption>
    <video youtube="XJYDMZe8JUk" label="vid_deriv_apps_opt_box_no_top"/>
  </figure>


  <p>
    <xref ref="sec_differentials"/>
    introduces our final application of the derivative:
    <em>differentials</em>.
    Given <m>y=f(x)</m>,
    they offer a method of approximating the change in <m>y</m> after <m>x</m>
    changes by a small amount.
  </p>

  <exercises>
    <subexercises xml:id="TaC-optimization">
      <title>Terms and Concepts</title>
      <exercise label="TaC-optimization-1">
        <webwork xml:id="webwork-TaC-optimization-1">
          <pg-code>
            $true=PopUp(['?','True','False'],1);
            $false=PopUp(['?','True','False'],2);
          </pg-code>
          <statement>
            <p>
              <var name="$true" form="popup"/>
              An <q>optimization problem</q>
              is essentially an <q>extreme values</q>
              problem in a <q>story problem</q> setting.
            </p>
          </statement>
        </webwork>
      </exercise>

      <exercise label="TaC-optimization-2">
        <webwork xml:id="webwork-TaC-optimization-2">
          <pg-code>
            $true=PopUp(['?','True','False'],1);
            $false=PopUp(['?','True','False'],2);
          </pg-code>
          <statement>
            <p>
              <var name="$false" form="popup"/>
              This section teaches one to find the extreme values of a
              function that has more than one variable.
            </p>
          </statement>
        </webwork>
      </exercise>
    </subexercises>

    <subexercises>
      <title>Problems</title>
      <!--Exercise 3: Maximize product of two numbers-->
      <exercise label="ex-optimization-product">
        <webwork xml:id="webwork-ex-optimization-product">
          <pg-code>
            $sum = random(50,200,2);
            if($envir{problemSeed}==1){$sum=100;};
            $maxprod = ($sum/2)**2;
          </pg-code>
          <statement>
            <p>
              Find the maximum product of two numbers
              (not necessarily integers)
              that have a sum of <var name="$sum"/>.
            </p>
            <instruction>
              If there is no maximum product, enter <c>DNE</c>.
            </instruction>
            <p>
              <var name="$maxprod" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 4: Minimize sum of two numbers       -->
      <exercise label="ex-optimization-sum-1">
        <webwork xml:id="webwork-ex-optimization-sum-1">
          <pg-code>
            $prod = random(400,600,10);
            if($envir{problemSeed}==1){$prod=500;};
            $minsum = Compute("2 sqrt($prod)");
          </pg-code>
          <statement>
            <p>
              Find the minimum sum of two positive numbers
              whose product is <var name="$prod"/>.
            </p>
            <instruction>
              If there is no minimum sum, enter <c>DNE</c>.
            </instruction>
            <p>
              <var name="$minsum" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 5: Maximum sum of two numbers -->
      <exercise label="ex-optimization-sum-2">
        <webwork xml:id="webwork-ex-optimization-sum-2">
          <pg-code>
            $prod = random(400,600,10);
            if($envir{problemSeed}==1){$prod=500;};
            $maxsum = Compute("DNE");
          </pg-code>
          <statement>
            <p>
              Find the maximum sum of two positive numbers
              whose product is <var name="$prod"/>.
            </p>
            <instruction>
              If there is no maximum sum, enter <c>DNE</c>.
            </instruction>
            <p>
              <var name="$maxsum" width="20"/>
            </p>
          </statement>
          <solution>
            <p>
              There is no maximum sum;
              the fundamental equation has only 1 critical value that
              corresponds to a minimum.
            </p>
          </solution>
        </webwork>
      </exercise>
      <!-- Exercise 6: Maximum sum with a boundary condition -->
      <exercise label="ex-optimization-sum-3">
        <webwork xml:id="webwork-ex-optimization-sum-3">
          <pg-code>
            $prod = random(400,600,10);
            $upper = random(200,500,10);
            if($envir{problemSeed}==1){$prod=500;$upper=300;};
            Context("Fraction-NoDecimals");
            $maxsum = Fraction("$upper + $prod/$upper");
          </pg-code>
          <statement>
            <p>
              Find the maximum sum of two numbers,
              each of which is less than or equal to <m><var name="$upper"/></m>,
              whose product is <var name="$prod"/>.
            </p>
            <instruction>
              If there is no maximum sum, enter <c>DNE</c>.
            </instruction>
            <p>
              <var name="$maxsum" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 7: Maximum area of a right triangle -->
      <exercise label="ex-optimization-triangle">
        <webwork xml:id="webwork-ex-optimization-triangle">
          <pg-code>
            $hyp = random(1,9,1);
            if($envir{problemSeed}==1){$hyp=1;};
            $maxarea=Real($hyp**2/4);
          </pg-code>
          <statement>
            <p>
              Find the maximal area of a right triangle with hypotenuse of
              length <m><var name="$hyp"/></m>.
            </p>
            <p>
              <var name="$maxarea" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!--Exercise 8: Two adjacent rectangular pens-->
      <exercise label="ex-optimization-pens">
        <webwork xml:id="webwork-ex-optimization-pens">
          <pg-code>
            $total = random(800,1500,100);
            if($envir{problemSeed}==1){$total=1000;};
            Context("Fraction");
            $length=Fraction($total,6);
            $width=Fraction($total,8);
            $l = FormulaWithUnits("$length ft");
            $w = FormulaWithUnits("$width ft");
            $multians = MultiAnswer($l, $w)-&gt;with(
              singleResult =&gt; 1,
              checker =&gt; sub {
                my ( $correct, $student, $self ) = @_;
                my ( $stu1, $stu2 ) = @{$student};
                my ( $cor1, $cor2 ) = @{$correct};
                if ( ($cor1 == $stu1 &amp;&amp; $cor2 == $stu2) ||
                     ($cor1 == $stu2 &amp;&amp; $cor2 == $stu1) ) {
                    return 1;
                } else {
                    return 0;
                }
              }
            );
          </pg-code>
          <statement>
            <p>
              A rancher has <m><var name="$total"/></m> feet of fencing in which to construct
              adjacent, equally sized rectangular pens.
              What dimensions should these pens have to maximize the enclosed area?
            </p>
            <image width="33%">
              <shortdescription>
               A rectangle divided into two parts.
              </shortdescription>
              <description>
                A large rectangle divided into two equal rectangles.
              </description>
              <latex-image label="img_04_03_ex_08">
                \begin{tikzpicture}
                  \draw [thick] (0,0) rectangle (3,2);
                  \draw [thick] (1.5,0) -- (1.5,2);
                \end{tikzpicture}
              </latex-image>
            </image>
            <instruction>
              Enter the two dimensions, one in each blank, for <em>one</em> of the two pens here. Use <c>ft</c> for feet.
            </instruction>
            <p>
              <var name="$multians" width="20"/>
            </p>
            <p>
              <var name="$multians" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 9: Dimensions of the optimal cylindrical can -->
      <exercise label="ex-optimization-can-1">
        <webwork xml:id="webwork-ex-optimization-can-1">
          <pg-code>
            $V = NumberWithUnits("355 cm^3");
            parser::Root-&gt;Enable;
            $r = Compute("root(3,355/(2pi))");
            $h = Compute("root(3,1420/pi)");
            $rU = NumberWithUnits("$r cm");
            $hU = NumberWithUnits("$h cm");
            $showwork = '[@ explanation_box(message =&gt; "Discuss whether or not your calculation suggests that a real world soda can is designed to minimize the materials cost.") @]*';
          </pg-code>
          <statement>
            <p>
              A standard soda can is roughly cylindrical and holds
              <m><var name="$V"/></m> of liquid.
              What dimensions should the cylinder have to minimize the material
              needed to produce the can?
              Based on your dimensions,
              determine whether or not the standard can is produced to
              minimize the material costs.
            </p>
            <instruction>
              Enter its radius here.
            </instruction>
            <p>
              <var name="$rU" width="20"/>
            </p>
            <instruction>
              Enter its height here.
            </instruction>
            <p>
              <var name="$hU" width="20"/>
            </p>
            <p>
              <var name="$showwork" data="pgml"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 10: Optimal different cylindrical can -->
      <exercise label="ex-optimization-can-2">
        <webwork xml:id="webwork-ex-optimization-can-2">
          <pg-code>
            $V = NumberWithUnits("206 in^3");
            parser::Root-&gt;Enable;
            $r = Compute("root(3,206/(2pi))");
            $h = Compute("root(3,824/pi)");
            $rU = NumberWithUnits("$r in");
            $hU = NumberWithUnits("$h in");
            $showwork = '[@ explanation_box(message =&gt; "Discuss whether or not your calculation suggests that a #10 can is designed to minimize the materials cost.") @]*';
          </pg-code>
          <statement>
            <p>
              Find the dimensions of a cylindrical can with a volume of
              <m><var name="$V"/></m> that minimizes the surface area.
            </p>
            <instruction>
              Enter its radius here.
            </instruction>
            <p>
              <var name="$rU" width="20"/>
            </p>
            <instruction>
              Enter its height here.
            </instruction>
            <p>
              <var name="$hU" width="20"/>
            </p>
            <p>
              The <q>#10 can</q>is a standard sized can used by the restaurant
              industry that holds about
              <m><var name="$V"/></m> with a diameter of
              <m>6\,\frac{3}{16}\,\text{in}</m>
              and height of
              <m>7\,\text{in}</m>.
              Does it seem these dimensions where chosen with minimization in mind?
            </p>
            <p>
              <var name="$showwork" data="pgml"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 11: Dimensions of the optimal cylindrical can, part 2 -->
      <exercise label="ex-optimization-can-3">
        <webwork xml:id="webwork-ex-optimization-can-3">
          <pg-code>
            $V = NumberWithUnits("355 cm^3");
            parser::Root-&gt;Enable;
            $r = Compute("root(3,355/(4pi))");
            $h = Compute("root(3,5680/pi)");
            $rU = NumberWithUnits("$r cm");
            $hU = NumberWithUnits("$h cm");
            $showwork = '[@ explanation_box(message =&gt; "Discuss whether or not your calculation suggests that a real world soda can is designed to minimize the materials cost.") @]*';
          </pg-code>
          <statement>
            <p>
              A standard soda can is roughly cylindrical and holds
              <m><var name="$V"/></m> of liquid.
              A real-world soda can has material on the top and bottom that is thicker
              than the material around the side.
              Assume that the top/bottom material is twice as thick as the material around the side.
              What dimensions should the cylinder have to minimize the material
              needed to produce the can?
              Based on your dimensions and the assumption about material thickness,
              determine whether or not the standard can is produced to
              minimize the material costs.
            </p>
            <instruction>
              Enter its radius here.
            </instruction>
            <p>
              <var name="$rU" width="20"/>
            </p>
            <instruction>
              Enter its height here.
            </instruction>
            <p>
              <var name="$hU" width="20"/>
            </p>
            <p>
              <var name="$showwork" data="pgml"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 12: USPS shipping box -->
      <exercise label="ex-optimization-box">
        <webwork xml:id="webwork-ex-optimization-box">
          <pg-code>
            $V = NumberWithUnits("36*18**2 in^3");
          </pg-code>
          <statement>
            <p>
              The United States Postal Service charges more for boxes whose
              combined length and girth exceeds <m>108</m> inches.
              (The <q>length</q> of a package is the length of its longest side;
              the girth is the perimeter of the cross section, i.e., <m>2w+2h</m>).
            </p>
            <p>
              What is the maximum volume of a package with a square cross
              section (<m>w=h</m>) that does not exceed the
              <m>108</m> inch standard?
            </p>
            <p>
              <var name="$V" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 13: Strength of a beam -->
      <exercise label="ex-optimization-beam">
        <webwork xml:id="webwork-ex-optimization-beam">
          <pg-code>
            $D = random(10,20,1);
            if($envir{problemSeed}==1){$D=12;};
            $w = Compute("$D/sqrt(3)");
            $h = Compute("sqrt($D^2 - $w^2)");
            $wU = NumberWithUnits("$w in");
            $hU = NumberWithUnits("$h in");
            $multians = MultiAnswer($wU, $hU)-&gt;with(
              singleResult =&gt; 1,
              checker =&gt; sub {
                my ( $correct, $student, $self ) = @_;
                my ( $stu1, $stu2 ) = @{$student};
                my ( $cor1, $cor2 ) = @{$correct};
                if ( ($cor1 == $stu1 &amp;&amp; $cor2 == $stu2) ||
                     ($cor1 == $stu2 &amp;&amp; $cor2 == $stu1) ) {
                    return 1;
                } else {
                    return 0;
                }
              }
            );
          </pg-code>
          <statement>
            <p>
              The strength <m>S</m> of a wooden beam is directly proportional
              to its cross sectional width <m>w</m> and the square of its
              height <m>h</m>.
              that is, <m>S = kwh^2</m> for some constant <m>k</m>.
            </p>
            <image width="25%">
              <shortdescription>
                A circle with a rectangle divided diagonally inscribed inside it.
              </shortdescription>
              <description>
                <p>
                  A circular log with diameter of <quantity><mag>12</mag><unit base="inch"/></quantity> has rectangle inscribed inside. The rectangle is divided diagonally forming
                  two equal right-angle triangles. The line that divides it is the diameter.
                </p>
                <p>
                  The shorter side of the rectangle is labeled <m>w</m> which serves as the cross sectional width and the
                  longer side is labelled <m>h</m> which is the height.
                </p>
              </description>
              <latex-image label="img_04_03_ex_13">
                \begin{tikzpicture}
                  \draw [thick] (0,0) circle (1cm);
                  \draw [thick] (-.6,.8) -- node [pos=.5,right] { \(12\)} (.6,-.8);
                  \draw [thick] (-.6,-.8) rectangle (.6,.8);
                  \draw (.7,0) node { \(h\)} (0,.7) node { \(w\)};
                \end{tikzpicture}
              </latex-image>
            </image>
            <p>
              Given a circular log with diameter of <m><var name="$D"/></m> inches,
              what sized beam can be cut from the log with maximum strength?
            </p>
            <instruction>
              Enter the cross-sectional dimensions here.
            </instruction>
            <p>
              <var name="$multians" width="20"/>
            </p>
            <p>
              <var name="$multians" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 14: Power line by land and by sea -->
      <exercise label="ex-optimization-power-line-1">
        <webwork xml:id="webwork-ex-optimization-power-line-1">
          <pg-code>
            do {
              ($x,$y) = (2,3,4,5,6)[NchooseK(5,2)];
              $ycost=random(30000,50000,5000);
              $xcost=$ycost + random(30000,50000,5000);
            } until ($y - $ycost*$x/sqrt($xcost**2 - $ycost**2) &gt; 0);
            if($envir{problemSeed}==1){$x=2;$y=5;$xcost=80000;$ycost=50000};
            Context("Currency")-&gt;flags-&gt;set(trimTrailingZeros=&gt;1,tolerance=&gt;1);
            $xC = Currency($xcost);
            $yC = Currency($ycost);
            $g = Compute("50000");
            $s = Compute("80000");
            $a = Compute("5");
            $b = Compute("2");
            $z = max(0,$y - $ycost*$x/sqrt($xcost**2 - $ycost**2));
            $C = Currency($z*$ycost + $xcost*sqrt($x**2+($y - $z)**2));
            Context("Numeric");
            $zU = NumberWithUnits("$z mi");
          </pg-code>
          <statement>
            <p>
              A power line is to be run to an offshore facility in the manner
              described in <xref ref="ex_opt3"/>.
              The offshore facility is <m><var name="$x"/></m> miles at sea and
              <m><var name="$y"/></m> miles along the shoreline from the power plant.
              It costs <m><var name="$yC"/></m> per mile to lay a power line underground and
              <m><var name="$xC"/></m> to run the line underwater.
            </p>
            <p>
              How much of the power line should be run underground?
              What is the minimum overall cost?
            </p>
            <instruction>
              Enter the length of line under ground here.
            </instruction>
            <p>
              <var name="$zU" width="20"/>
            </p>
            <instruction>
              Enter the minimum overall cost here.
            </instruction>
            <p>
              <var name="$C" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 15: Different power line by land and by sea, this time boundary condition will matter  -->
      <exercise label="ex-optimization-power-line-2">
        <webwork xml:id="webwork-ex-optimization-power-line-2">
          <pg-code>
            do {
              ($x,$y) = (2,3,4,5,6)[NchooseK(5,2)];
              $ycost=random(30000,50000,5000);
              $xcost=$ycost + random(30000,50000,5000);
            } until ($y - $ycost*$x/sqrt($xcost**2 - $ycost**2) &lt; 0);
            if($envir{problemSeed}==1){$x=5;$y=2;$xcost=80000;$ycost=50000};
            Context("Currency")-&gt;flags-&gt;set(trimTrailingZeros=&gt;1,tolerance=&gt;1);
            $xC = Currency($xcost);
            $yC = Currency($ycost);
            $g = Compute("50000");
            $s = Compute("80000");
            $a = Compute("5");
            $b = Compute("2");
            $z = max(0,$y - $ycost*$x/sqrt($xcost**2 - $ycost**2));
            $C = Currency($z*$ycost + $xcost*sqrt($x**2+($y - $z)**2));
            Context("Numeric");
            $zU = NumberWithUnits("$z mi");
          </pg-code>
          <statement>
            <p>
              A power line is to be run to an offshore facility in the manner
              described in <xref ref="ex_opt3"/>.
              The offshore facility is <m><var name="$x"/></m> miles at sea and
              <m><var name="$y"/></m> miles along the shoreline from the power plant.
              It costs <m><var name="$yC"/></m> per mile to lay a power line underground and
              <m><var name="$xC"/></m> to run the line underwater.
            </p>
            <p>
              How much of the power line should be run underground?
              What is the minimum overall cost?
            </p>
            <instruction>
              Enter the length of line under ground here.
            </instruction>
            <p>
              <var name="$zU" width="20"/>
            </p>
            <instruction>
              Enter the minimum overall cost here.
            </instruction>
            <p>
              <var name="$C" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!--Exercise 16: Dog, stick, water: Classic -->
      <exercise label="ex-optimization-dog-stick-water-1">
        <webwork xml:id="webwork-ex-optimization-dog-stick-water-1">
          <pg-code>
            ($x,$y) = (10..40)[NchooseK(31,2)];
            $run = random(18,25,1);
            $swim = random(1.2,2.4,0.1);
            if($envir{problemSeed}==1){$x=15;$y=20;$run=22;$swim=1.5;};
            $runU = NumberWithUnits("$run ft/s");
            $swimU = NumberWithUnits("$swim ft/s");
            $z = max(0,$y - $swim*$x/sqrt($run**2 - $swim**2));
            $zU = NumberWithUnits("$z ft");
          </pg-code>
          <statement>
            <p>
              A woman throws a stick into a lake for her dog to fetch;
              the stick is <m><var name="$y"/></m> feet down the shore line
              and <m><var name="$x"/></m> feet into the water from there.
              The dog may jump directly into the water and swim,
              or run along the shore line to get closer to the stick before
              swimming. The dog runs about <m><var name="$runU"/></m>
              and swims about <m><var name="$swimU"/></m>.
            </p>
            <p>
              How far along the shore should the dog run to minimize the
              time it takes to get to the stick? (Hint: the figure from
              <xref ref="ex_opt3"/> can be useful.)
            </p>
            <p>
              <var name="$zU" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!--Exercise 17: Dog, stick, water 2-->
      <exercise label="ex-optimization-dog-stick-water-2">
        <webwork xml:id="webwork-ex-optimization-dog-stick-water-2">
          <pg-code>
            ($x,$y) = (10..40)[NchooseK(31,2)];
            $run = random(18,25,1);
            $swim = random(1.2,2.4,0.1);
            if($envir{problemSeed}==1){$x=30;$y=15;$run=22;$swim=1.5;};
            $runU = NumberWithUnits("$run ft/s");
            $swimU = NumberWithUnits("$swim ft/s");
            $z = max(0,$y - $swim*$x/sqrt($run**2 - $swim**2));
            $zU = NumberWithUnits("$z ft");
          </pg-code>
          <statement>
            <p>
              A woman throws a stick into a lake for her dog to fetch;
              the stick is <m><var name="$y"/></m> feet down the shore line
              and <m><var name="$x"/></m> feet into the water from there.
              The dog may jump directly into the water and swim,
              or run along the shore line to get closer to the stick before
              swimming. The dog runs about <m><var name="$runU"/></m>
              and swims about <m><var name="$swimU"/></m>.
            </p>
            <p>
              How far along the shore should the dog run to minimize the
              time it takes to get to the stick?
              (Google <q>calculus dog</q> to learn more about a dog's ability to minimize times.)
            </p>
            <p>
              <var name="$zU" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <!-- Exercise 18: Rectangle inside the unit circle -->
      <exercise label="ex-optimization-inscribed-rectangle">
        <webwork xml:id="webwork-ex-optimization-inscribed-rectangle">
          <pg-code>
            $w = Compute("sqrt(2)");
            $multians = MultiAnswer($w,$w)-&gt;with(
              singleResult =&gt; 1,
              checker =&gt; sub {
                my ( $correct, $student, $self ) = @_;
                my ( $stu1, $stu2 ) = @{$student};
                my ( $cor1, $cor2 ) = @{$correct};
                if ( ($cor1 == $stu1 &amp;&amp; $cor2 == $stu2) ||
                     ($cor1 == $stu2 &amp;&amp; $cor2 == $stu1) ) {
                    return 1;
                } else {
                    return 0;
                }
              }
            );
          </pg-code>
          <statement>
            <p>
              What are the dimensions of the rectangle with largest area that
              can be drawn inside the unit circle?
            </p>
            <p>
              <var name="$multians" width="20"/>
            </p>
            <p>
              <var name="$multians" width="20"/>
            </p>
          </statement>
        </webwork>
      </exercise>
    </subexercises>
  </exercises>
</section>
